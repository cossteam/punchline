syntax = "proto3";

package api;
option go_package = "github.com/cossteam/punch/api";

//import "google/protobuf/any.proto";

message Msg {
  string Value = 1;
}

service PubSubService {
  rpc Publish (PublishRequest) returns (PublishResponse);
  rpc Subscribe (SubscribeRequest) returns (stream Message);
  rpc Unsubscribe (UnsubscribeRequest) returns (UnsubscribeResponse);
}

message Message {
  string topic = 1;
  bytes data = 3;
}

message PublishRequest {
  string topic = 1;
  string hostname = 2;
  bytes data = 3;
}

message PublishResponse {}

message SubscribeRequest {
  string topic = 1;
  string hostname = 2;
}

message UnsubscribeRequest {
  string topic = 1;
  string hostname = 2;
}

message UnsubscribeResponse {}

service PunchService {
  rpc HostOnline(HostOnlineRequest) returns (HostOnlineResponse);

  // 客户端向协调服务器查询目标客户端的地址信息
  rpc HostQuery(HostQueryRequest) returns (HostQueryResponse);

  // 客户端向协调服务器更新自己的地址信息
  rpc HostUpdate(HostUpdateRequest) returns (HostUpdateResponse);

  // 通知客户端进行打洞操作
  rpc HostPunch(HostPunchRequest) returns (HostPunchResponse);

  // 通知协调服务器客户端的地址发生变化
  rpc HostMoved(HostMovedRequest) returns (HostMovedResponse);
}

message HostOnlineRequest {
  string hostname = 1;
  repeated ipv4Addr ipv4_addr = 2;
  repeated ipv6Addr ipv6_addr = 3;
  ipv4Addr external_addr = 4;
}

message HostOnlineResponse {}

message HostQueryRequest {
  string target_hostname = 1;
}

message HostQueryResponse {
  repeated ipv4Addr ipv4_addr = 1;
  repeated ipv6Addr ipv6_addr = 2;
}

message HostUpdateRequest {
  string hostname = 1;
  repeated ipv4Addr ipv4_addr = 2;
  repeated ipv6Addr ipv6_addr = 3;
  ipv4Addr external_addr = 4;
}

message HostUpdateResponse {
  bool success = 1;
}

message HostPunchRequest {
  string target_hostname = 1;
}

message HostPunchResponse {
  bool success = 1;
}

message HostMovedRequest {
  string hostname = 1;
  repeated ipv4Addr ipv4_addr = 2;
  repeated ipv6Addr ipv6_addr = 3;
}

message HostMovedResponse {
  bool success = 1;
}

message HostSubscribeRequest {
  string topic = 1;
  string hostname = 2;
}

message HostSubscribeResponse {
  string event = 1;
  string data = 2;
}

message HostMessage {
  enum MessageType {
    None = 0;
    HostQuery = 1;
    HostQueryReply = 2;
    HostUpdateNotification = 3;
    HostMovedNotification = 4;
    HostPunchNotification = 5;
    HostOnlineNotification = 6;
    HostOfflineNotification = 7;
  }
  MessageType type = 1;
  ipv4Addr external_addr = 2;
  repeated ipv4Addr ipv4_addr = 3;
  repeated ipv6Addr Ipv6_addr = 4;
  string hostname = 5;
}

message ipv4Addr {
  uint32 Ip = 1;
  uint32 Port = 2;
}

message ipv6Addr {
  uint64 Hi = 1;
  uint64 Lo = 2;
  uint32 Port = 3;
}
